"""
–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ –•
–ó–∞–¥–∞—á–∞ ‚Ññ (–ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞) + –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
–ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä (–æ—Ç 1 –¥–æ 5)
"""


def solve(input_data):
    return input_data * 2


def run_tests():
    test_cases = [
        {"input": 10, "expected": 20},
        {"input": 5, "expected": 10},
        {"input": -3, "expected": -6},
        {"input": 0, "expected": 0},
    ]

    all_tests_passed = True

    for i, test_case in enumerate(test_cases, start=1):
        input_data = test_case["input"]
        expected_output = test_case["expected"]

        actual_output = solve(input_data)

        if actual_output == expected_output:
            print(f"Test case {i}: PASSED ‚úÖ")
        else:
            all_tests_passed = False
            print(f"Test case {i}: FAILED ‚ùå")
            print(f"  Input: {input_data}")
            print(f"  Expected output: {expected_output}")
            print(f"  Actual output: {actual_output}")

    if all_tests_passed:
        print("–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã, –ø–æ—Å—Ç–∞–≤—å—Ç–µ 5 üòÖ!")
    else:
        print("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —Ç–æ–ª—å–∫–æ –Ω–µ –±–µ–π—Ç–µ ü•∫")


if __name__ == "__main__":
    run_tests()
